schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.11"
    import: [
      "@extends"
      "@external"
      "@inaccessible"
      "@key"
      "@override"
      "@policy"
      "@provides"
      "@requires"
      "@shareable"
      "@tag"
      "FieldSet"
    ]
  )
  @link(
    url: "https://specs.apollo.dev/connect/v0.2"
    import: [
      "@connect"
      "@source"
      "JSONSelection"
      "HTTPHeaderMapping"
      "ConnectHTTP"
      "SourceHTTP"
    ]
  )
  @source(
    name: "connect-v2"
    http: {
      baseURL: "https://connect.squareupstaging.com/v2"
      headers: [
        { name: "Accept", value: "application/json" }
        { name: "Authorization", from: "Authorization" }
      ]
    }
  ) {
  query: Query
}

"""
Represents an amount of money. Money fields can be signed or unsigned.
Fields that do not explicitly define whether they are signed or unsigned are
considered unsigned and can only hold positive amounts. For signed fields, the
sign of the value indicates the purpose of the money transfer.
"""
type Money @shareable {
  """
  The amount of money, in the smallest denomination of the currency.
  For example, when currency is USD, amount is in cents.
  Monetary amounts can be positive or negative.
  """
  amount: Int

  """
  The type of currency, in ISO 4217 format.
  For example, the currency code for US dollars is USD.
  """
  currency: String
}

"""
Represents a refund processed by Square.
"""
type PaymentRefund @key(fields: "id") {
  """
  The unique ID for this refund, generated by Square.
  """
  id: ID!

  """
  The refund's status:
  - PENDING - Awaiting approval.
  - COMPLETED - Successfully completed.
  - REJECTED - The refund was rejected.
  - FAILED - An error occurred.
  """
  status: String

  """
  The location ID associated with the payment this refund is attached to.
  """
  locationId: ID @inaccessible

  """
  The location associated with the payment this refund is attached to.
  """
  location: Location
    @connect(
      source: "connect-v2"
      http: { GET: "/locations/{$this.locationId}" }
      selection: """
      $.location {
        id
      }
      """
    )

  """
  Flag indicating whether or not the refund is linked to an existing payment in Square.
  """
  unlinked: Boolean!

  """
  The destination type for this refund.
  Current values include CARD, BANK_ACCOUNT, WALLET, BUY_NOW_PAY_LATER, CASH,
  EXTERNAL, and SQUARE_ACCOUNT.
  """
  destinationType: String

  """
  The amount of money refunded.
  """
  amountMoney: Money!

  """
  The amount of money the application developer contributed to help cover the refunded amount.
  """
  appFeeMoney: Money

  """
  Processing fees and fee adjustments assessed by Square for this refund.
  """
  processingFee: [ProcessingFee!]

  """
  The ID of the payment associated with this refund.
  """
  paymentId: ID @inaccessible

  """
  The payment associated with this refund.
  """
  payment: Payment
    @connect(
      source: "connect-v2"
      http: { GET: "/payments/{$this.paymentId}" }
      selection: """
      $.payment {
        id
      }
      """
    )

  """
  The ID of the order associated with the refund.
  """
  orderId: ID @inaccessible

  """
  The order associated with the refund.
  """
  order: Order
    @connect(
      source: "connect-v2"
      http: { GET: "/orders/{$this.orderId}" }
      selection: """
      $.order {
        id
      }
      """
    )

  """
  The reason for the refund.
  """
  reason: String

  """
  The timestamp of when the refund was created, in RFC 3339 format.
  """
  createdAt: String!

  """
  The timestamp of when the refund was last updated, in RFC 3339 format.
  """
  updatedAt: String!

  """
  An optional ID of the team member associated with taking the payment.
  """
  teamMemberId: ID @inaccessible

  """
  The team member associated with taking the payment.
  """
  teamMember: TeamMember
    @connect(
      source: "connect-v2"
      http: { GET: "/team-members/{$this.teamMemberId}" }
      selection: """
      $.team_member {
        id
      }
      """
    )

  """
  An optional ID for a Terminal refund.
  """
  terminalRefundId: ID @inaccessible

  """
  The terminal refund associated with this refund.
  """
  terminalRefund: TerminalRefund
    @connect(
      source: "connect-v2"
      http: { GET: "/terminal/refunds/{$this.terminalRefundId}" }
      selection: """
      $.refund {
        id
      }
      """
    )
}

"""
Represents a processing fee charged by Square.
"""
type ProcessingFee {
  """
  The monetary amount of the fee.
  """
  amountMoney: Money!

  """
  When the fee takes effect.
  """
  effectiveAt: String!

  """
  The type of fee assessed.
  """
  type: String!
}

"""
Connection type for paginated refund queries.
"""
type PaymentRefundConnection {
  """
  The list of refunds.
  """
  nodes: [PaymentRefund!]!

  """
  Pagination cursor for the next page of results.
  """
  cursor: String
}

type Query {
  """
  Retrieves a specific refund using the refund_id.
  """
  paymentRefund(
    """
    The unique ID for the desired PaymentRefund.
    """
    id: ID!
  ): PaymentRefund
    @connect(
      source: "connect-v2"
      id: "GetPaymentRefund"
      entity: true
      http: { GET: "/refunds/{$args.id}" }
      selection: """
      $.refund {
        id
        status
        locationId: location_id
        unlinked
        destinationType: destination_type
        amountMoney: amount_money {
          amount
          currency
        }
        appFeeMoney: app_fee_money {
          amount
          currency
        }
        processingFee: processing_fee {
          amountMoney: amount_money {
            amount
            currency
          }
          effectiveAt: effective_at
          type
        }
        paymentId: payment_id
        orderId: order_id
        reason
        createdAt: created_at
        updatedAt: updated_at
        teamMemberId: team_member_id
        terminalRefundId: terminal_refund_id
      }
      """
    )

  """
  Lists refunds for a given payment.
  """
  paymentRefunds(
    """
    The beginning of the requested reporting period.
    """
    beginTime: String

    """
    The end of the requested reporting period.
    """
    endTime: String

    """
    The order in which results are listed by PaymentRefund.created_at:
    - ASC - Oldest to newest.
    - DESC - Newest to oldest (default).
    """
    sortOrder: String

    """
    A pagination cursor returned by a previous call to this endpoint.
    """
    cursor: String

    """
    Limit results to the location supplied.
    """
    locationId: ID

    """
    If provided, only refunds with the given status are returned.
    """
    status: String

    """
    If provided, only returns refunds whose payments have the indicated source type.
    """
    sourceType: String

    """
    The maximum number of results to be returned in a single page.
    """
    limit: Int

    """
    Indicates the start of the time range to retrieve each PaymentRefund for.
    """
    updatedAtBeginTime: String

    """
    Indicates the end of the time range to retrieve each PaymentRefund for.
    """
    updatedAtEndTime: String
  ): PaymentRefundConnection
    @connect(
      source: "connect-v2"
      id: "ListPaymentRefunds"
      http: {
        GET: "/refunds"
        queryParams: """
        begin_time: $args.beginTime
        end_time: $args.endTime
        sort_order: $args.sortOrder
        cursor: $args.cursor
        location_id: $args.locationId
        status: $args.status
        source_type: $args.sourceType
        limit: $args.limit
        updated_at_begin_time: $args.updatedAtBeginTime
        updated_at_end_time: $args.updatedAtEndTime
        """
      }
      selection: """
      nodes: $.refunds {
        id
        status
        locationId: location_id
        unlinked
        destinationType: destination_type
        amountMoney: amount_money {
          amount
          currency
        }
        appFeeMoney: app_fee_money {
          amount
          currency
        }
        processingFee: processing_fee {
          amountMoney: amount_money {
            amount
            currency
          }
          effectiveAt: effective_at
          type
        }
        paymentId: payment_id
        orderId: order_id
        reason
        createdAt: created_at
        updatedAt: updated_at
        teamMemberId: team_member_id
        terminalRefundId: terminal_refund_id
      }
      cursor: $.cursor
      """
    )
}

"""
Represents a physical location in the Square system.
"""
type Location @key(fields: "id", resolvable: false) {
  """
  The location's unique ID.
  """
  id: ID!
}

"""
Represents a payment in the Square system.
"""
type Payment @key(fields: "id", resolvable: false) {
  """
  The payment's unique ID.
  """
  id: ID!
}

"""
Represents an order in the Square system.
"""
type Order @key(fields: "id", resolvable: false) {
  """
  The order's unique ID.
  """
  id: ID!
}

"""
Represents a team member in the Square system.
"""
type TeamMember @key(fields: "id", resolvable: false) {
  """
  The team member's unique ID.
  """
  id: ID!
}

"""
Represents a terminal refund in the Square system.
"""
type TerminalRefund @key(fields: "id", resolvable: false) {
  """
  The terminal refund's unique ID.
  """
  id: ID!
}
